package com.dysen.myUtil;import android.content.Context;import android.location.LocationManager;import android.net.ConnectivityManager;import android.net.NetworkInfo;import android.telephony.TelephonyManager;import java.util.List;/** *  * 邮箱: dysen@outlook.com | dy.sen@qq.com *  * 作者: 沈迪 [ sendy ] *  * 日期: 2015-6-10 下午4:32:40 *  * 描述: 检查网络是否可用 *  */public class IsNetworkAvailable {	/** Network type is unknown */	public static final int NETWORK_TYPE_UNKNOWN = 0;	/** Current network is GPRS */	public static final int NETWORK_TYPE_GPRS = 1;	/** Current network is EDGE */	public static final int NETWORK_TYPE_EDGE = 2;	/** Current network is UMTS */	public static final int NETWORK_TYPE_UMTS = 3;	/** Current network is CDMA: Either IS95A or IS95B */	public static final int NETWORK_TYPE_CDMA = 4;	/** Current network is EVDO revision 0 */	public static final int NETWORK_TYPE_EVDO_0 = 5;	/** Current network is EVDO revision A */	public static final int NETWORK_TYPE_EVDO_A = 6;	/** Current network is 1xRTT */	public static final int NETWORK_TYPE_1xRTT = 7;	/** Current network is HSDPA */	public static final int NETWORK_TYPE_HSDPA = 8;	/** Current network is HSUPA */	public static final int NETWORK_TYPE_HSUPA = 9;	/** Current network is HSPA */	public static final int NETWORK_TYPE_HSPA = 10;	/** Current network is iDen */	public static final int NETWORK_TYPE_IDEN = 11;	/** Current network is EVDO revision B */	public static final int NETWORK_TYPE_EVDO_B = 12;	/** Current network is LTE */	public static final int NETWORK_TYPE_LTE = 13;	/** Current network is eHRPD */	public static final int NETWORK_TYPE_EHRPD = 14;	/** Current network is HSPA+ */	public static final int NETWORK_TYPE_HSPAP = 15;	public static final int NETWORK_TYPE_UNAVAILABLE = 16;	public static final int NETWORK_TYPE_WIFI = 17;	public static final int NETWORK_CLASS_UNAVAILABLE = 4;	public static final int NETWORK_CLASS_WIFI = 5;	/** Unknown network class. {@hide} */	public static final int NETWORK_CLASS_UNKNOWN = 0;	/** Class of broadly defined "2G" networks. {@hide} */	public static final int NETWORK_CLASS_2_G = 1;	/** Class of broadly defined "3G" networks. {@hide} */	public static final int NETWORK_CLASS_3_G = 2;	/** Class of broadly defined "4G" networks. {@hide} */	public static final int NETWORK_CLASS_4_G = 3;	/**	 * 检测当的网络（WLAN、3G/2G）状态	 * 	 * @param context	 *            Context	 * @return true 表示网络可用	 */	public static boolean myIsNetworkAvailable(Context context) {		ConnectivityManager connectivity = (ConnectivityManager) context				.getSystemService(Context.CONNECTIVITY_SERVICE);		if (connectivity != null) {			NetworkInfo info = connectivity.getActiveNetworkInfo();			if (info != null && info.isConnected()) {				// 当前网络是连接的				if (info.getState() == NetworkInfo.State.CONNECTED) {					// 当前所连接的网络可用					return true;				}			}		}		return false;	}	/** * 判断WIFI是否打开 * @param context * @return */	public static boolean myIsWifiEnabled(Context context) {		ConnectivityManager mgrConn = (ConnectivityManager) context				.getSystemService(Context.CONNECTIVITY_SERVICE);		TelephonyManager mgrTel = (TelephonyManager) context				.getSystemService(Context.TELEPHONY_SERVICE);		return ((mgrConn.getActiveNetworkInfo() != null && mgrConn				.getActiveNetworkInfo().getState() == NetworkInfo.State.CONNECTED) || mgrTel				.getNetworkType() == TelephonyManager.NETWORK_TYPE_UMTS);	}	/** * 判断是否是3G网络 * @param context * @return true(3G) */	public static boolean myIs3G(Context context) {		ConnectivityManager cm = (ConnectivityManager) context				.getSystemService(Context.CONNECTIVITY_SERVICE);		NetworkInfo networkINfo = cm.getActiveNetworkInfo();		if (networkINfo != null				&& networkINfo.getType() == ConnectivityManager.TYPE_MOBILE) {			getNetworkClassByType(networkINfo.getType());			return true;		}		return false;	}	/** * 判断是否是wifi * @param context * @return true(wifi) */	public static boolean myIsWifi(Context context) {		ConnectivityManager cm = (ConnectivityManager) context				.getSystemService(Context.CONNECTIVITY_SERVICE);		NetworkInfo networkINfo = cm.getActiveNetworkInfo();		if (networkINfo != null				&& networkINfo.getType() == ConnectivityManager.TYPE_WIFI) {			return true;		}		return false;	}	private static int getNetworkClassByType(int networkType) {		switch (networkType) {		case NETWORK_TYPE_UNAVAILABLE:			return NETWORK_CLASS_UNAVAILABLE;		case NETWORK_TYPE_WIFI://			return NETWORK_CLASS_WIFI;		case NETWORK_TYPE_GPRS:// 常量值：1 网络类型：GPRS (联通2g)		case NETWORK_TYPE_EDGE://常量值：2 网络类型：EDGE(移动2g)		case NETWORK_TYPE_UMTS://常量值：3 网络类型：UMTS(联通3g)		case NETWORK_TYPE_CDMA://常量值：4 网络类型： CDMA (电信2g)		case NETWORK_TYPE_EVDO_0://常量值：5 网络类型：EVDO 版本0.(电信3g)		case NETWORK_TYPE_EVDO_A://常量值：6 网络类型：EVDO 版本A (电信3g)		case NETWORK_TYPE_1xRTT://常量值：7 网络类型：1xRTT		case NETWORK_TYPE_HSDPA://常量值：8 网络类型：HSDPA(联通3g)		case NETWORK_TYPE_HSUPA://常量值：9 网络类型：HSUPA		case NETWORK_TYPE_HSPA:// 常量值：10 网络类型：HSPA		case NETWORK_TYPE_IDEN://常量值：11 网络类型：iDen			return NETWORK_CLASS_2_G;		case NETWORK_TYPE_EVDO_B://常量值：12 网络类型：EVDO 版本B(电信3g)		case NETWORK_TYPE_LTE://常量值：13 网络类型：LTE(3g到4g的一个过渡，称为准4g)				return NETWORK_CLASS_4_G;		case NETWORK_TYPE_EHRPD://常量值：14 网络类型：eHRPD		case NETWORK_TYPE_HSPAP://常量值：15 网络类型：HSPA+			return NETWORK_CLASS_3_G;		default:			return NETWORK_CLASS_UNKNOWN;		}	}	/** * 判断GPS是否打开 * @param context * @return */	public static boolean myIsGpsEnabled(Context context) {		LocationManager lm = ((LocationManager) context				.getSystemService(Context.LOCATION_SERVICE));		List<String> accessibleProviders = lm.getProviders(true);		return accessibleProviders != null && accessibleProviders.size() > 0;	}	/**	 * 使用NetworkInfo的getType()方法可以判断是WiFi还是手机网络。	 * 手机网络的情况下，使用NetworkInfo的 getSubtype()方法再去和TelephonyManager的网络类型常量值去比较，	 * 判断是何种具体网络。	 * @param context	 * @return	 */	public static String getCurrentNetType(Context context) {		String type = "";		ConnectivityManager cm = (ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE);		NetworkInfo info = cm.getActiveNetworkInfo();		if (info == null) {			type = "null";		} else if (info.getType() == ConnectivityManager.TYPE_WIFI) {			type = "wifi";		} else if (info.getType() == ConnectivityManager.TYPE_MOBILE) {			int subType = info.getSubtype();			if (subType == TelephonyManager.NETWORK_TYPE_CDMA || subType == TelephonyManager.NETWORK_TYPE_GPRS					|| subType == TelephonyManager.NETWORK_TYPE_EDGE) {				type = "2g";			} else if (subType == TelephonyManager.NETWORK_TYPE_UMTS || subType == TelephonyManager.NETWORK_TYPE_HSDPA					|| subType == TelephonyManager.NETWORK_TYPE_EVDO_A || subType == TelephonyManager.NETWORK_TYPE_EVDO_0					|| subType == TelephonyManager.NETWORK_TYPE_EVDO_B) {				type = "3g";			} else if (subType == TelephonyManager.NETWORK_TYPE_LTE) {// LTE是3g到4g的过渡，是3.9G的全球标准				type = "4g";			}		}		return type;	}}