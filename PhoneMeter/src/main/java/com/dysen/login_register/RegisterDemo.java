/** * 邮箱: dysen@outlook.com | dy.sen@qq.com * * 作者: 沈迪 [ sen dy ] * * 日期: 2015-6-23  下午2:03:40  2015   *  * 描述:  * */package com.dysen.login_register;import android.content.IntentFilter;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.telephony.TelephonyManager;import android.text.method.HideReturnsTransformationMethod;import android.text.method.PasswordTransformationMethod;import android.view.View;import android.view.View.OnClickListener;import android.widget.*;import com.alibaba.fastjson.JSON;import com.dysen.info.DataInfo;import com.dysen.myUtil.sms.SMSCore;import com.dysen.myUtil.sms.SMS_Receiver;import com.dysen.qj.wMeter.R;import com.dysen.myUtil.IsPhoneNumber;import com.dysen.myUtil.MyActivityTools;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.OutputStream;import java.net.HttpURLConnection;import java.net.MalformedURLException;import java.net.URL;/** *  * 邮箱: dysen@outlook.com | dy.sen@qq.com *  * 作者: 沈迪 [ sendy ] *  * 日期: 2015-6-23 下午2:03:40 *  * 描述: 用户注册 *  */public class RegisterDemo extends MyActivityTools implements OnClickListener {	private String uNameRegister, uPwdRegister, uPwdRegisterAgain,			uPhoneRegister, uEmailRegister, emailFormat;	Button btnOk, btnBack, btnShow1, btnShow2, btnGet;	EditText etNameRegister, etPwdRegister, etPwdRegisterAgain,			etPhoneRegister, etEmailRegister;	private String HTTP_IP;	private byte[] sendData;	String[] strEmailFomat = { "", "@qq.com", "@126.com", "@163.com",			"@enn.cn", "@sina.com", "@gmail.com", "@sohu.com", "@yahoo.com.cn",			"@sogou.com ", "@56.com", "" };	String updateUrl, strMsg;	DataInfo data;	Handler handler;	boolean isCipher;	/**	 * sen dy	 * 	 * 2015-6-23 下午2:12:27	 */	@Override	protected void onCreate(Bundle savedInstanceState) {		// TODO Auto-generated method stub		super.onCreate(savedInstanceState);		boolean bl = FlymeSetStatusBarLightMode(getWindow(), true);//		ToastDemo.myHint(this,   "bl:"+bl);		boolean b =MIUISetStatusBarLightMode(getWindow(), true);//		ToastDemo.myHint(this,   "b:"+b);		setContentView(R.layout.activity_register);		((TextView) this.findViewById(R.id.tv_hint)).setText("用户注册");		btnOk = (Button) this.findViewById(R.id.btn_ok);		btnBack = (Button) this.findViewById(R.id.btn_back);		btnShow1 = (Button) this.findViewById(R.id.btn_show1);		btnShow2 = (Button) this.findViewById(R.id.btn_show2);		btnGet = (Button) this.findViewById(R.id.btn_get);				etNameRegister = (EditText)this.findViewById(R.id.et_username_register);		etPwdRegister = (EditText)this.findViewById(R.id.et_pwd_register);		etPwdRegisterAgain = (EditText)this.findViewById(R.id.et_pwd_register_again);		etPhoneRegister = (EditText)this.findViewById(R.id.et_phone_register);		etEmailRegister = (EditText)this.findViewById(R.id.et_email_register);		btnOk.setOnClickListener(this);		btnBack.setOnClickListener(this);		btnShow1.setOnClickListener(this);		btnShow2.setOnClickListener(this);		btnGet.setOnClickListener(this);		HTTP_IP = this.getText(R.string.HTTP_IP).toString();		System.out.println("IP地址：" + HTTP_IP);		myActionBar();		handler = new Handler() {			@Override			public void handleMessage(Message msg) {					DataInfo data;					data = (DataInfo) msg.obj;					if (data == null) {						// myHint("无数据");					} else {						strMsg = data.getMsg().toString();						if (data.getSuccess()) {							if ("注册成功".equals(strMsg)) {								myHint(strMsg);								finish();							} else {								myHint(strMsg);							}						} else {							if ("注册失败".equals(strMsg)) {								myHint(strMsg);							} else if ("用户名已注册".equals(strMsg)) {								myHint(strMsg + ",请更改用户名");							} else if ("手机号已注册".equals(strMsg)) {								myHint(strMsg + ",请更改手机号");							} else {								myHint(strMsg);							}						}					}			}		};	}	public void myBack(View v){		finish();	}	/**	 * sen dy	 * 	 * 2015-6-23 下午5:15:40	 */	@Override	public void onClick(View v) {		switch (v.getId()) {		case R.id.btn_ok:			myOk();			break;		case R.id.btn_back:			finish();			break;		case R.id.btn_show1:			myCipher(R.id.et_pwd_register, R.id.btn_show1);			break;		case R.id.btn_show2:			myCipher(R.id.et_pwd_register_again, R.id.btn_show2);			break;		case R.id.btn_get:			myGetOwnNumber();			break;		}	}		/**	 *	dysen	 *	2015-7-2 上午8:53:28	 *	info: 获取本机号码	 */	private void myGetOwnNumber() {		//		TelephonyManager mTelephonyMgr = (TelephonyManager) getSystemService(this.TELEPHONY_SERVICE);////		mTelephonyMgr.getLine1Number();//		System.out.println(mTelephonyMgr.getLine1Number()+"	用户：\n");//		etPhoneRegister.setText(mTelephonyMgr.getLine1Number().replace("+86", ""));		// 注册接收下行receiver		SMS_Receiver smsReceiver = new SMS_Receiver();		IntentFilter receiverFilter = new IntentFilter("android.provider.Telephony.SMS_RECEIVED");		registerReceiver(smsReceiver, receiverFilter);		//发送短信		SMSCore smscore = new SMSCore();		smscore.SendSMS2("10001", "501", this);		etPhoneRegister.setText(smscore.PhoneNumber);	}	/** 	 *	sen dy	 *	 *	2015-6-23 下午4:56:10	 *	 *	info: 密文明文显示密码	 */	private void myCipher(int etId, int btnId) {				EditText et = (EditText) findViewById(etId);		Button btn = (Button) findViewById(btnId);				if (isCipher) {			et.setTransformationMethod(PasswordTransformationMethod					.getInstance()); // 密文显示			btn.setBackgroundResource(R.drawable.eyes_press);			isCipher = false;			myHint("密文显示");		} else {			et.setTransformationMethod(HideReturnsTransformationMethod							.getInstance());// 明文显示			btn.setBackgroundResource(R.drawable.eyes_normal);			isCipher = true;			myHint("明文显示");		}	}		Spinner spinner;	boolean blMenuItem = true;;	public void myActionBar() {		spinner = (Spinner) findViewById(R.id.user_register_spinner);		spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {			@Override			public void onItemSelected(AdapterView<?> arg0, View arg1,					int arg2, long arg3) {				emailFormat = strEmailFomat[arg2];				System.out.println(arg2 + "^^^^^^^^" + emailFormat						+ "^^^^^^^^^^" + strEmailFomat[arg2]);			}			@Override			public void onNothingSelected(AdapterView<?> arg0) {				// TODO Auto-generated method stub			}		});		// Create an ArrayAdapter using the string array and a default spinner		// layout		ArrayAdapter<CharSequence> adapter = ArrayAdapter				.createFromResource(this, R.array.email_array,						android.R.layout.simple_spinner_item);		// Specify the layout to use when the list of choices appears		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);		// Apply the adapter to the spinner		spinner.setAdapter(adapter);	}	/**	 * dysen 2015-3-26 上午10:49:37 info: 用户注册时 提交函数	 */	private void myOk() {		uNameRegister = etNameRegister.getText().toString().trim();		uPwdRegister = etPwdRegister.getText().toString().trim();		uPwdRegisterAgain = etPwdRegisterAgain.getText().toString().trim();		uPhoneRegister = etPhoneRegister.getText().toString();		uEmailRegister = etEmailRegister.getText().toString() + emailFormat;		System.out.println("此时的注册邮箱是：" + uEmailRegister);		if (!"".equals(uNameRegister) && !"".equals(uPwdRegister)				&& !"".equals(uPwdRegisterAgain) && !"".equals(uPhoneRegister)) {			boolean mobileNo = IsPhoneNumber.isMobileNo(uPhoneRegister);			if (mobileNo) {				if (uPwdRegister.equals(uPwdRegisterAgain)) {					sendData = ("name=" + uNameRegister + "&&pw="							+ uPwdRegister + "&&phone=" + uPhoneRegister							+ "&&email=" + uEmailRegister + "&&type=" + 1).getBytes();					updateUrl = HTTP_IP + "/app/login/reg?";					myHint("正在注册");					new Thread(Connect).start();// 启动下载内容线程				} else {					myHint("两次密码不一致 ！！！");				}			} else {				myHint("注册手机号不合规则");			}			System.out.println("name=" + uNameRegister + "&&pw=" + uPwdRegister					+ "&&pw_again=" + uPwdRegisterAgain);		} else if ("".equals(uNameRegister) || "".equals(uPwdRegister)				|| "".equals(uPwdRegisterAgain)) {			Toast.makeText(this, "用户名或密码不为空 ！！！", Toast.LENGTH_SHORT).show();		} else if ("".equals(uPhoneRegister)) {			myHint("注册手机不为空");		}	}	Runnable Connect = new Runnable() {		private String str;		private static final int TIMEOUT = 10000;// 10秒		private static final String encoding = "utf-8";		URL url;		HttpURLConnection conn;		@Override		public void run() {			// System.out.println("---------run -------");			try {				url = new URL(updateUrl);				conn = (HttpURLConnection) url.openConnection();				conn.setRequestMethod("POST");				conn.setConnectTimeout(TIMEOUT);				conn.setDoOutput(true);				conn.setDoInput(true);				conn.setRequestProperty("Content-Type",						"application/x-www-form-urlencoded");				conn.setRequestProperty("Charset", encoding);				conn.setRequestProperty("Content-Length",						String.valueOf(sendData.length));				conn.connect();				System.out.println(new String(sendData) + "开始下载");				OutputStream outStream = conn.getOutputStream();				outStream.write(sendData);				outStream.flush();				outStream.close();				// 从 服务器 获取数据				BufferedReader in = new BufferedReader(new InputStreamReader(						conn.getInputStream(), encoding));				String retData = null;				String responseData = "";				while ((retData = in.readLine()) != null) {					responseData += retData;					System.out.println(responseData + "下载的内容");				}				String str = responseData;				data = JSON.parseObject(responseData, DataInfo.class);				resultJson(data);			} catch (MalformedURLException e) {				e.printStackTrace();			} catch (IOException e) {				e.printStackTrace();			}		}	};	/**	 * readParse（String）从服务器端获取数据 Analysis（String）解析json数据	 */	private void resultJson(DataInfo data) {		try {			Message message = Message.obtain();			message.obj = data;			handler.sendMessage(message);		} catch (Exception e) {			e.printStackTrace();		}	}	/**	 * dysen 2015-4-18 上午10:37:19 info: 提示内容	 */	public void myHint(String str) {		Toast.makeText(this, str + " !!!", Toast.LENGTH_SHORT).show();	}}