/** * 邮箱: dysen@outlook.com | dy.sen@qq.com * * 作者: 沈迪 [ sen dy ] * * 日期: 2015-6-25  下午2:52:10  2015   *  * 描述:  * */package com.dysen.login_register;import android.content.Intent;import android.os.Bundle;import android.os.Handler;import android.os.Message;import android.view.View;import android.view.View.OnClickListener;import android.widget.Button;import android.widget.EditText;import android.widget.TextView;import com.alibaba.fastjson.JSON;import com.dysen.info.DataInfo;import com.dysen.info.Plogin;import com.dysen.qj.wMeter.R;import com.dysen.myUtil.MyActivityTools;import com.dysen.myUtil.ToastDemo;import java.io.BufferedReader;import java.io.IOException;import java.io.InputStreamReader;import java.io.OutputStream;import java.net.HttpURLConnection;import java.net.MalformedURLException;import java.net.URL;/** *  * 邮箱: dysen@outlook.com | dy.sen@qq.com *  * 作者: 沈迪 [ sendy ] *  * 日期: 2015-6-25 下午2:52:10 *  * 描述: 忘记密码 *  */public class ForgetPwdDemo extends MyActivityTools implements OnClickListener {	private String HTTP_IP = "";		Button btnBack, btnSelect;	EditText etUsername;	public static DataInfo data;	private Handler handler;	private String updateUrl;	private byte[] sendData;		/**	 * sen dy	 * 	 * 2015-6-25 下午2:52:21	 */	@Override	protected void onCreate(Bundle savedInstanceState) {		// TODO Auto-generated method stub		super.onCreate(savedInstanceState);		setContentView(R.layout.activity_forget_pwd);		((TextView) this.findViewById(R.id.tv_hint)).setText("忘记密码");		HTTP_IP = this.getText(R.string.HTTP_IP).toString();		boolean bl = FlymeSetStatusBarLightMode(getWindow(), true);//		ToastDemo.myHint(this,   "bl:"+bl);		boolean b =MIUISetStatusBarLightMode(getWindow(), true);//		ToastDemo.myHint(this,   "b:"+b);		btnBack = (Button) this.findViewById(R.id.btn_back);		btnSelect = (Button) this.findViewById(R.id.btn_select);		etUsername = (EditText) this.findViewById(R.id.et_username_login);		etUsername.setText(getIntent().getStringExtra("user_name"));				btnBack.setOnClickListener(this);		btnSelect.setOnClickListener(this);		myHandler();	}		private void myHandler() {		handler = new Handler() {			private String strMsg;			private DataInfo data;			@Override			public void handleMessage(Message msg) {				data = (DataInfo) msg.obj;				if (data == null) {					ToastDemo.myHint(ForgetPwdDemo.this, "表号不匹配 ！！！");				} else {					strMsg = data.getMsg().toString();					if (data.getSuccess()) {						if ("查找成功".equals(strMsg)) {							ToastDemo.myHint(ForgetPwdDemo.this, strMsg);							Plogin pl = JSON.parseObject(									JSON.toJSONString(data.getObj()),									Plogin.class);							Intent it = new Intent(ForgetPwdDemo.this, UpdatePwd.class);							it.putExtra("login_id", pl.getId());							it.putExtra("user_name", etUsername.getText().toString().trim());							startActivity(it);						} else {							ToastDemo.myHint(ForgetPwdDemo.this, strMsg);						}					} else {						ToastDemo.myHint(ForgetPwdDemo.this, strMsg);					}				}			}		};	}	/**	 * sen dy	 * 	 * 2015-6-25 下午3:10:51	 */	@Override	public void onClick(View v) {		switch (v.getId()) {		case R.id.btn_back:			finish();			break;		case R.id.btn_select:			ToastDemo.myHint(this, "待完善");//			mySelect(etUsername.getText().toString().trim());			break;		}	}		public void mySelect(String name) {		if (!"".equals(name)) {			sendData = // meterId.getBytes();			("name=" + name ).getBytes();			System.out.println("sendData:" + sendData);			updateUrl = HTTP_IP + "/app/find/findName?";			new Thread(Connect).start(); // 启动下载内容线程			System.out.println("name=" + name );		} else {			// myHint("请先输入表号在进行查询操作！！！");		}	}		Runnable Connect = new Runnable() {		private String str;		private static final int TIMEOUT = 10000;// 10秒		private static final String encoding = "utf-8";		// "http://192.168.1.103:8080/water/seach/seachId?";		// "http://dysen.oicp.net/ssh/uploadOrDownload/upload";		URL url;		HttpURLConnection conn;		@Override		public void run() {			// System.out.println("---------run -------");			try {				url = new URL(updateUrl);				conn = (HttpURLConnection) url.openConnection();				conn.setRequestMethod("POST");				conn.setConnectTimeout(TIMEOUT);				conn.setDoOutput(true);				conn.setDoInput(true);				conn.setRequestProperty("Content-Type",						"application/x-www-form-urlencoded");				conn.setRequestProperty("Charset", encoding);				conn.setRequestProperty("Content-Length",						String.valueOf(sendData.length));				conn.connect();				System.out.println(new String(sendData) + "开始下载");				OutputStream outStream = conn.getOutputStream();				outStream.write(sendData);				outStream.flush();				outStream.close();				// 从 服务器 获取数据				BufferedReader in = new BufferedReader(new InputStreamReader(						conn.getInputStream(), encoding));				String retData = null;				String responseData = "";				while ((retData = in.readLine()) != null) {					responseData += retData;					System.out.println(responseData + "下载的内容");				}				String str = responseData;				data = JSON.parseObject(responseData, DataInfo.class);				resultJson(data);			} catch (MalformedURLException e) {				e.printStackTrace();			} catch (IOException e) {				e.printStackTrace();			}		}	};	private void resultJson(DataInfo data) {		try {			Message message = Message.obtain();			message.obj = data;			handler.sendMessage(message);		} catch (Exception e) {			e.printStackTrace();		}	}}